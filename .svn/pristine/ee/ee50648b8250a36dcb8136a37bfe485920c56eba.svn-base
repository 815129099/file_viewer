package com.jjshome.viewer.tools;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Reader;
import java.io.Writer;



public class FileUtils {
	
	public static String getFileName(String fileName) {
		int lastx = fileName.lastIndexOf("/");
		int lastd = fileName.lastIndexOf(".");
		if (lastx < 0 && lastd < 0) {
			return fileName;
		} else if (lastx < 0 && lastd >= 0) {
			return fileName.substring(0, lastd);
		} else if (lastx >= 0 && lastd < 0) {
			return fileName.substring(lastx + 1);
		} else {
			return fileName.substring(lastx + 1, lastd);
		}
	}

	public static String getFilePrefix(String fileName){
		int splitIndex = fileName.lastIndexOf(".");
        return fileName.substring(0, splitIndex);
	}
	
	public static String getFileSufix(String fileName){
		int splitIndex = fileName.lastIndexOf(".");
        return fileName.substring(splitIndex + 1);
	}
	
	public static void copyFile(String inputFile,String outputFile) throws FileNotFoundException{
		File sFile = new File(inputFile);
		File tFile = new File(outputFile);
		FileInputStream fis = new FileInputStream(sFile);
		FileOutputStream fos = new FileOutputStream(tFile);
		int temp = 0;  
        try {  
			while ((temp = fis.read()) != -1) {  
			    fos.write(temp);  
			}
        } catch (IOException e) {  
            e.printStackTrace();  
        } finally{
            try {
				fis.close();
				fos.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
        } 
	}

	public static void copyFile(String inputFile, String inputCharset,
			String outputFile, String outputCharset) throws Exception {
		Reader reader = new InputStreamReader(new FileInputStream(new File(
				inputFile)), inputCharset);
		Writer writer = new OutputStreamWriter(new FileOutputStream(new File(
				outputFile)), outputCharset);
		int temp = 0;
		try {
			while ((temp = reader.read()) != -1) {
				writer.write(temp);
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				reader.close();
				writer.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
}
